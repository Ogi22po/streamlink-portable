<?xml version="1.0"?>
<doc>
<assembly>
<name>
Streamlink for Windows
</name>
</assembly>
<members>
<member name="T:Streamlink_for_Windows.ExtendedBackgroundWorker">
 <summary>
 Extends the standard BackgroundWorker Component in .NET 2.0 Winforms
 To support the ability of aborting the thread the worker is using.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Streamlink_for_Windows.ExtendedBackgroundWorker.GetBaseFieldValue``1(System.String)">
 <summary>
 returns the private fields value of the base class using reflection.
 </summary>
 <typeparam name="T">The expected type of the field to be retrieved</typeparam>
 <param name="privateFieldName">The name of the field to look for</param>
 <returns>The value of the private field requested in the base class of the caller</returns>
 <remarks></remarks>
</member>
<member name="M:Streamlink_for_Windows.ExtendedBackgroundWorker.SafeCast``1(System.Object)">
 <summary>
 Works like the 'as' operator in C#. If the cast is not successfull
 no exception is thrown, and the default value for the requested type is returned.
 </summary>
 <typeparam name="T">The Type to cast the object into</typeparam>
 <param name="value">The object to be casted</param>
 <returns>Either the object casted into the requested type or the default value for the type (null, zero etc..)</returns>
 <remarks></remarks>
</member>
<member name="M:Streamlink_for_Windows.ExtendedBackgroundWorker.CancelImmediately">
 <summary>
 This method kills the running task.
 If you have any exception handling in your 'DoWork' method, 
 be sure to also catch and ignore ThreadAbortException which will be raised when this method is called.
 If you don't have exception handling inside the DoWork method, you do not need to do anything. The exception will be caught by the component.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Streamlink_for_Windows.ExtendedBackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
 <summary>
 We override DoWork so we can get a hold of the currently running thread from the threadpool
 </summary>
 <param name="args"></param>
 <remarks></remarks>
</member>
<member name="T:Streamlink_for_Windows.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Streamlink_for_Windows.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Streamlink_for_Windows.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
</members>
</doc>
